//@version=5
strategy("EMA + MACD 线段突破策略",
         shorttitle="EMA21-MACD-1H",
         overlay=true,
         initial_capital=1000,
         default_qty_type=strategy.cash,
         default_qty_value=20000,
         commission_type=strategy.commission.percent,
         commission_value=0.1,
         process_orders_on_close=false)

// ============================================
// 1. 用户输入
// ============================================
groupIndicator = "指标参数"
ema21_length = input.int(21, "EMA 入场线", group=groupIndicator)
ema52_length = input.int(52, "EMA 出场线", group=groupIndicator)
macd_fast = input.int(12, "MACD 快线周期", group=groupIndicator)
macd_slow = input.int(26, "MACD 慢线周期", group=groupIndicator)
macd_signal = input.int(9, "MACD 信号线周期", group=groupIndicator)

groupSegment = "线段过滤"
delay_bars = input.int(25, "下跌线段确认K线数", minval=1, group=groupSegment, tooltip="DEA下穿0轴后，等待N根K线才确认为下跌线段")

// ============================================
// 2. 时间周期检查
// ============================================
if timeframe.period != "60"
    runtime.error("此策略仅支持1小时(1H)周期，请切换到1H周期图表")

// ============================================
// 3. 计算指标
// ============================================
// EMA
ema21 = ta.ema(close, ema21_length)
ema52 = ta.ema(close, ema52_length)

// MACD
[dif, dea, macd_hist] = ta.macd(close, macd_fast, macd_slow, macd_signal)


// ===== 调用库函数检测阴阳冕 =====
//yinYangCrownDetected = YZM.detectYinYangCrown(fastLength, slowLength, signalLength)
//if yinYangCrownDetected == 1

// ============================================
// 4. 上涨线段识别（带延迟确认）
// ============================================
dea_cross_above_zero = ta.crossover(dea, 0)
dea_cross_below_zero = ta.crossunder(dea, 0)

// 线段状态：true=上涨线段或延迟期，false=下跌线段
var bool in_tradable_segment = false
// 延迟计数器：记录DEA下穿0轴后经过的K线数
var int delay_counter = 0

if dea_cross_above_zero
    // DEA上穿0轴：进入上涨线段
    in_tradable_segment := true
    delay_counter := 0

if dea_cross_below_zero
    // DEA下穿0轴：开始延迟计数，暂时还算可交易期
    delay_counter := 1
    in_tradable_segment := true
else if delay_counter > 0 and delay_counter < delay_bars
    // 延迟期内：继续计数
    delay_counter := delay_counter + 1
    in_tradable_segment := true
else if delay_counter >= delay_bars
    // 延迟期结束：确认为下跌线段
    in_tradable_segment := false

// 判断是否在延迟期
in_delay_period = delay_counter > 0 and delay_counter < delay_bars

// ============================================
// 5. 入场和出场信号
// ============================================
in_position = strategy.position_size > 0

// 入场：价格向上突破EMA21 且 在可交易线段内（上涨线段或延迟期）
long_entry = ta.crossover(close, ema21) and in_tradable_segment

// 出场：价格跌破EMA52
long_exit = ta.crossunder(close, ema52)

// ============================================
// 6. 策略执行
// ============================================
if long_entry and not in_position
    strategy.entry("多单", strategy.long)

if long_exit and in_position
    strategy.close("多单")

// ============================================
// 7. 图表可视化
// ============================================
// 绘制EMA
p_ema21 = plot(ema21, "EMA21", color=color.blue, linewidth=2)
p_ema52 = plot(ema52, "EMA52", color=color.orange, linewidth=2)

// 填充EMA之间的区域
fill(p_ema21, p_ema52, color=ema21 > ema52 ? color.new(color.green, 90) : color.new(color.red, 90))

// 标记线段状态
// 上涨线段：浅蓝色背景
// 延迟期：浅黄色背景
// 下跌线段：无背景
segment_color = in_tradable_segment ? (in_delay_period ? color.new(color.yellow, 95) : color.new(color.aqua, 95)) : na
bgcolor(segment_color, title="线段背景")

// 标记线段起点和终点
plotshape(dea_cross_above_zero, "线段起点↑", shape.triangleup, location.belowbar, color=color.new(color.green, 0), size=size.tiny)
plotshape(dea_cross_below_zero, "延迟期开始↓", shape.triangledown, location.abovebar, color=color.new(color.orange, 0), size=size.tiny)
plotshape(delay_counter == delay_bars, "下跌线段确认", shape.xcross, location.abovebar, color=color.new(color.red, 0), size=size.small)

// ============================================
// 8. 警报设置
// ============================================
alertcondition(long_entry, "做多信号", "{{ticker}} 突破EMA21入场 | 周期:{{interval}} | 价格:{{close}}")
alertcondition(long_exit, "出场信号", "{{ticker}} 跌破EMA52出场 | 周期:{{interval}} | 价格:{{close}}")
alertcondition(dea_cross_above_zero, "线段起点", "{{ticker}} MACD线段起点 (DEA上穿0轴)")
alertcondition(dea_cross_below_zero, "线段终点", "{{ticker}} MACD线段终点 (DEA下穿0轴)")
